package edu.ucsb.cs56.w15.drawings.wpollek.advanced;
import java.awt.geom.GeneralPath; // combinations of lines and curves
import java.awt.geom.AffineTransform; // translation, rotation, scale
import java.awt.Shape; // general class for shapes

// all imports below this line needed if you are implementing Shape
import java.awt.geom.Point2D; 
import java.awt.geom.Rectangle2D;
import java.awt.Rectangle;
import java.awt.geom.PathIterator;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;

import edu.ucsb.cs56.w15.drawings.utilities.ShapeTransforms;
import edu.ucsb.cs56.w15.drawings.utilities.GeneralPathWrapper;

/**
   A Coffee Cup (wrapper around a General Path, implements Shape)

   This provides an example of how you can start with the coordinates
   of a hard coded object, and end up with an object that can be
   drawn anywhere, with any width or height.
   
      
   @author Phill Conrad, Wesley Pollek
   @version for CS56, W15, UCSB
   
*/
public class TrainCar extends GeneralPathWrapper implements Shape
{

    
    /**
     * Constructor for objects of class TrainCar
     */
    public TrainCar(double x, double y, double width, double height)
    {
    
        // Rather than having to scale at the end, we can just
        // draw things the right way to begin with, using the
        // x, y, width and height.   If you haven't already
        // hard coded a particular drawing, this may be an easier
        // way.
        double wheelrad = height/4;
        double CarHeight = height/2;
        double wheelJoint = y + CarHeight;
        
        // Make the first story
        
        Rectangle2D.Double carBox = 
            new Rectangle2D.Double(x, y, width, CarHeight);
        
        Ellipse2D.Double leftWheel = 
            new Ellipse2D.Double (x, y + CarHeight , wheelrad, wheelrad);
                               
        Ellipse2D.Double rightWheel =
            new Ellipse2D.Double (x + width - 2*wheelrad, y + CarHeight, wheelrad, wheelrad);

        // put the whole house together
       
        GeneralPath wholeCar = this.get();
        wholeCar.append(carBox, false);
        wholeCar.append(leftWheel, false);
        wholeCar.append(rightWheel, false); 
    }

}
