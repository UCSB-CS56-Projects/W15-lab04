package edu.ucsb.cs56.w15.drawings.wpollek.advanced;
import java.awt.geom.GeneralPath; // combinations of lines and curves
import java.awt.geom.AffineTransform; // translation, rotation, scale
import java.awt.Shape; // general class for shapes

// all imports below this line needed if you are implementing Shape
import java.awt.geom.Point2D; 
import java.awt.geom.Rectangle2D;
import java.awt.Rectangle;
import java.awt.geom.PathIterator;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D; 
import java.lang.Math.*;

import edu.ucsb.cs56.w15.drawings.utilities.ShapeTransforms;
import edu.ucsb.cs56.w15.drawings.utilities.GeneralPathWrapper;

/**
   A Train Car (wrapper around a General Path, implements Shape)

   This provides an example of how you can start with the coordinates
   of a hard coded object, and end up with an object that can be
   drawn anywhere, with any width or height.
   
      
   @author Phill Conrad, Wesley Pollek
   @version for CS56, W15, UCSB
   
*/
public class TrainCarWithGoods extends TrainCar implements Shape
{

    
    /**
     * Constructor for objects of class TrainCarWithGoods
     */
    public TrainCar(double x, double y, double width, double height)
    {
	super(x,y,width,height);
	int randomheight= (int)(Math.random()*width);
	int randomwidth= (int)(Math.random()*width);
